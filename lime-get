#!/bin/dash


limehost="ftp://repo.limeroot.org"
listpath="/var/lib/apt/lists"
listfile="www.limeroot.org-repo_dist_"
packpath="/var/cache/apt/archives"

#Repo_structure:
# Package: lr-utils
# Version: 1.0
# Architecture: i386
# Maintainer: LimeRoot Team <devel@limeroot.org>
# Description: Extra utilities for LimeRoot systems.


get_arch(){
	lrsys=$(uname -m)
	case "$lrsys" in
		i386|i686|i586) arch="i386";;
		x86_64) arch="x86_64"
	esac
}

get_path(){
	#$1 -> file type: ( package | list )
	#$2 -> repository ( devel | stable | nonfree )
	get_arch
	case "$1" in
		package)
			echo "$packpath/"	
		;;
		list)
			echo "$listpath/www.limeroot.org-repot_dist_$2_binary-${arch}_Packages"
			#example output: /var/lib/apt/list/www.limeroot.org-repot_dist_stable_binary-i686_Packages
		;;
	esac
}

fnsearchpkg(){
	#$1 -> package name
	[ ! -f "$(get_path "list" "stable")" ] && { echo -e "\e[1;31mPlease first use $0 update OR $0 update lime\e[00m"; exit 1; }
	infile="$(grep -iw "$1\$" $(get_path "list" "*") -l)"
	[ "$?" -ne 0 ] && fnaptget "$1"
	repository=$(echo $infile | awk -F "_" '{ print $3}')
	auxname=$(grep -iw "$1\$" "$infile")
	name=${auxname##* }
	auxversion=$(grep -iwA 4 "$1\$" "$infile" | grep "Version")
	version=${auxversion##* }
	packname="${name}_${version}_${arch}.deb"
	packurl="$limehost/$arch/$repository/$packname"
	#example output: ftp://repo.limeroot.org/x86_64/stable/lr-utils_1.0_i386.deb
}

fndownload(){
	#$1 -> file type: ( package | list )
	#$2 -> repository: ( devel | stable | nonfree ) || Package Name if $1 is a package
	get_arch
	case "$1" in
		package)
			fnsearchpkg "$2"
			echo -e "\e[1;34mTrying to get $packname...\e[00m"
			wget $packurl -O $packpath/$packname > /dev/null 2>&1
			#example output: ftp://repo.limeroot.org/x86_64/stable_packages
			[ "$?" -eq 0 ] && { echo -e "\e[1;34mPreparing to install...\e[00m"; fninstall; } || echo -e "\e[1;31mImpossible to get file from Repository\e[00m"
		;;	
		list)
			echo -e "\e[1;34mUpdating $2 repository for LimeRoot $arch ...\e[00m"
			wget $limehost/$arch/$2_packages -O $(get_path "list" "$2") > /dev/null 2>&1
			#example output: wget ftp://repo.limeroot.org/x86_64/stable/lr-utils_1.0_i386.deb
			[ "$?" -eq 0 ] && echo -e "\e[1;34mReady\e[00m" || echo -e "\e[1;31mUpdating fail, impossible to get list file from Internet\e[00m"
		;;
	esac
}

fninstall(){
	dpkg -i $packpath/$packname
	[ "$?" -ne 0 ] && exit 1
}

fnaptget(){
	echo -e "\e[1;30mtrying with apt-get, because package $2 not in limeroot repository...\e[00m"
	apt-get install "$1"
	exit
}

fnupdate(){
	[ -f "/etc/limeroot/lime-get.conf" ] && { . /etc/limeroot/lime-get.conf; } || { devel='off'; stable='on'; nonfree='off'; }
	#lime-get structure:
	# devel='off'
	# stable='on'
	# nonfree='off'
	[ "$devel" = "on" ] && fndownload "list" "devel"
	[ "$stable" = "on" ] && fndownload "list" "stable"
	[ "$nonfree" = "on" ] && fndownload "list" "nonfree"
}

case "$1" in
	update)
		if [ "$2" = "lime" ]; then
			fnupdate
		else
			fnupdate
			apt-get update
		fi
	;;
	install)
		fndownload "package" "$2"
	;;
	remove)
		apt-get purge $2
	;;
	*) echo "Usage: $0 { update | install | remove } [OPTIONS]"
esac
